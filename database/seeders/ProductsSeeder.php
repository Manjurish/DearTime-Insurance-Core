<?php     

namespace Database\Seeders;

use App\IndustryJob;
use App\Product;
use Illuminate\Database\Seeder;

class ProductsSeeder extends Seeder
{
    private $ci_options = [];
    private $death_options = [];
    // updated on 26 sep
    // not required to be underwritten
    private $disability_options = [];
    private $accident_options = [];

    // updated on 26 sep
    private $medical_options = []; // TPD


    // This coverage can only be purchased if the basic coverage of Death is purchased.
    // rate calculated by age and gender

    // ADD

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {

        Product::query()->truncate();

        $this->setData();


        Product::create([
            'name' => 'Death',
            'description' => 'Death insurance description',
            'options' => json_encode($this->death_options)
        ]);

        Product::create([
            'name' => 'Disability',
            'description' => 'Disability insurance description',
            'options' => json_encode($this->disability_options)
        ]);

        Product::create([
            'name' => 'Accident',
            'description' => 'Accident insurance description',
            'options' => json_encode($this->accident_options)
        ]);

        Product::create([
            'name' => 'Critical Illness',
            'description' => 'Critical Illness insurance description',
            'options' => json_encode($this->ci_options)
        ]);

        Product::create([
            'name' => 'Medical',
            'description' => 'Medical insurance description',
            'options' => json_encode($this->medical_options)
        ]);
    }

    public function setData()
    {
        $this->ci_options = [
            'min_age' => 14, //14 days old
            'max_age' => 60, //60 years old
            'max_renewal' => 99,
            'min_coverage' => 2000,


            // student 1067, 1142 => 2004
            // housewife 618, 1144 => 1628
            // househusband 617, 1143 => 1627
            // retiree 981, 1145 => 1935
            // working = any other than above

            'max_coverage_by_age' => [
                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 150000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Student')], 'coverage' => 250000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 250000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 250000],
                ['from' => 16, 'to' => 60, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 350000]],
            ],

            'max_coverage_by_age_charity' => [

                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 100000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Student')], 'coverage' => 100000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 100000],
                ['from' => 16, 'to' => 60, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 50000],
                ['from' => 16, 'to' => 60, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 250000]],
            ],

            'child_lien' => [
                ['age' => 0, 'coverage_claimable_percent' => 20],
                ['age' => 1, 'coverage_claimable_percent' => 40],
                ['age' => 2, 'coverage_claimable_percent' => 60],
                ['age' => 3, 'coverage_claimable_percent' => 80],

            ],


            'premium_rates' => [
                #Age Male Female
                # eg. male 30 - 1.2725 x 200000
                [0, 0.82, 0.85],
                [1, 0.82, 0.85],
                [2, 0.82, 0.85],
                [3, 0.82, 0.85],
                [4, 0.82, 0.85],
                [5, 0.82, 0.85],
                [6, 0.82, 0.85],
                [7, 0.82, 0.85],
                [8, 0.82, 0.85],
                [9, 0.82, 0.85],
                [10, 0.82, 0.85],
                [11, 0.82, 0.85],
                [12, 0.82, 0.85],
                [13, 0.82, 0.85],
                [14, 0.82, 0.85],
                [15, 0.82, 0.85],
                [16, 0.82, 0.85],
                [17, 0.82, 0.85],
                [18, 0.82, 0.85],
                [19, 0.82, 0.85],
                [20, 0.82, 0.85],
                [21, 0.85, 0.88],
                [22, 0.85, 0.89],
                [23, 0.85, 0.94],
                [24, 0.85, 0.94],
                [25, 0.85, 0.98],
                [26, 0.89, 1.01],
                [27, 0.94, 1.04],
                [28, 0.99, 1.08],
                [29, 1.05, 1.11],
                [30, 1.23, 1.20],
                [31, 1.24, 1.20],
                [32, 1.30, 1.20],
                [33, 1.39, 1.20],
                [34, 1.48, 1.29],
                [35, 1.61, 1.34],
                [36, 1.78, 1.40],
                [37, 1.90, 1.51],
                [38, 2.06, 1.61],
                [39, 2.28, 1.70],
                [40, 2.59, 1.91],
                [41, 2.94, 2.08],
                [42, 3.27, 2.24],
                [43, 3.70, 2.48],
                [44, 4.17, 2.72],
                [45, 4.91, 3.16],
                [46, 5.52, 3.55],
                [47, 6.24, 4.02],
                [48, 7.02, 4.52],
                [49, 8.04, 5.22],
                [50, 9.03, 5.88],
                [51, 9.94, 6.53],
                [52, 11.01, 7.28],
                [53, 12.25, 8.17],
                [54, 13.59, 9.15],
                [55, 14.89, 10.01],
                [56, 16.00, 10.82],
                [57, 17.66, 12.03],
                [58, 19.35, 13.37],
                [59, 21.34, 15.01],
                [60, 22.68, 16.15],
                [61, 24.92, 17.79],
                [62, 26.42, 18.84],
                [63, 29.13, 20.81],
                [64, 32.17, 22.92],
                [65, 34.84, 24.48],
                [66, 38.12, 26.89],
                [67, 41.57, 29.39],
                [68, 45.67, 32.45],
                [69, 49.69, 35.81],
                [70, 54.68, 39.18],
                [71, 60.20, 43.14],
                [72, 66.06, 47.38],
                [73, 72.45, 52.09],
                [74, 79.41, 57.28],
                [75, 87.05, 63.05],
                [76, 95.41, 69.25],
                [77, 104.37, 75.91],
                [78, 113.99, 83.18],
                [79, 124.36, 91.17],
                [80, 135.56, 99.95],
                [81, 147.63, 109.35],
                [82, 160.56, 119.41],
                [83, 174.30, 130.30],
                [84, 188.85, 142.02],
                [85, 204.24, 154.67],
                [86, 220.47, 168.22],
                [87, 237.68, 182.60],
                [88, 255.74, 197.85],
                [89, 274.49, 213.98],
                [90, 294.56, 231.32],
                [91, 315.82, 249.84],
                [92, 338.45, 269.46],
                [93, 362.14, 289.76],
                [94, 386.84, 310.72],
                [95, 412.17, 332.88],
                [96, 438.27, 356.13],
                [97, 465.16, 379.40],
                [98, 493.20, 402.98],
                [99, 522.92, 428.04]
            ]


        ];
        $this->death_options = [
            'max_age' => 65,
            'min_age' => 14,
            'min_coverage' => 2000,
            'guaranteed_acceptance' => 10000, //max cover if underwriting reject


            'child_lien' => [
                ['age' => 0, 'coverage_claimable_percent' => 20],
                ['age' => 1, 'coverage_claimable_percent' => 40],
                ['age' => 2, 'coverage_claimable_percent' => 60],
                ['age' => 3, 'coverage_claimable_percent' => 80],

            ],


            // student 1067, 1142
            // housewife 618, 1144
            // househusband 617, 1143
            // retiree 981, 1145
            // working = any other than above

            'max_coverage_by_age' => [
                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 250000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Student')], 'coverage' => 350000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 350000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 350000],
                ['from' => 16, 'to' => 65, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 500000]],
            ],

            'max_coverage_by_age_charity' => [

                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Student')], 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 50000],
                ['from' => 16, 'to' => 65, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 250000, 'min' => 100000]],
            ],


            'premium_rates' => [
                #Age Male Female
                # eg. male 30 - 1.2725 x 200000
                [0, 0.36, 0.36],
                [1, 0.36, 0.36],
                [2, 0.36, 0.36],
                [3, 0.36, 0.36],
                [4, 0.36, 0.36],
                [5, 0.36, 0.36],
                [6, 0.36, 0.36],
                [7, 0.36, 0.36],
                [8, 0.36, 0.36],
                [9, 0.36, 0.36],
                [10, 0.40, 0.39],
                [11, 0.47, 0.40],
                [12, 0.52, 0.44],
                [13, 0.58, 0.47],
                [14, 0.63, 0.50],
                [15, 0.70, 0.52],
                [16, 0.74, 0.55],
                [17, 0.74, 0.57],
                [18, 0.74, 0.58],
                [19, 0.74, 0.60],
                [20, 0.74, 0.61],
                [21, 0.74, 0.63],
                [22, 0.74, 0.65],
                [23, 0.74, 0.66],
                [24, 0.76, 0.68],
                [25, 0.76, 0.70],
                [26, 0.76, 0.71],
                [27, 0.76, 0.71],
                [28, 0.76, 0.73],
                [29, 0.76, 0.73],
                [30, 0.81, 0.73],
                [31, 0.82, 0.73],
                [32, 0.86, 0.74],
                [33, 0.91, 0.74],
                [34, 0.97, 0.76],
                [35, 1.02, 0.79],
                [36, 1.12, 0.81],
                [37, 1.18, 0.86],
                [38, 1.26, 0.91],
                [39, 1.37, 0.97],
                [40, 1.50, 1.05],
                [41, 1.68, 1.13],
                [42, 1.89, 1.25],
                [43, 2.12, 1.37],
                [44, 2.39, 1.52],
                [45, 2.72, 1.70],
                [46, 3.06, 1.91],
                [47, 3.44, 2.13],
                [48, 3.86, 2.41],
                [49, 4.33, 2.70],
                [50, 4.85, 3.04],
                [51, 5.40, 3.41],
                [52, 6.02, 3.83],
                [53, 6.69, 4.32],
                [54, 7.45, 4.83],
                [55, 8.28, 5.42],
                [56, 9.18, 6.06],
                [57, 10.19, 6.78],
                [58, 11.29, 7.57],
                [59, 12.48, 8.42],
                [60, 13.81, 9.36],
                [61, 15.25, 10.40],
                [62, 16.82, 11.53],
                [63, 18.55, 12.74],
                [64, 20.42, 14.07],
                [65, 22.48, 15.51],
                [66, 24.72, 17.06],
                [67, 27.17, 18.74],
                [68, 29.82, 20.54],
                [69, 32.70, 22.48],
                [70, 35.80, 24.56],
                [71, 39.20, 26.84],
                [72, 42.92, 29.35],
                [73, 46.99, 32.13],
                [74, 51.50, 35.23],
                [75, 56.47, 38.71],
                [76, 61.93, 42.61],
                [77, 67.95, 46.97],
                [78, 74.56, 51.83],
                [79, 81.81, 57.24],
                [80, 89.73, 63.24],
                [81, 98.27, 69.79],
                [82, 107.34, 76.81],
                [83, 116.91, 84.25],
                [84, 126.89, 92.04],
                [85, 137.20, 100.14],
                [86, 147.80, 108.49],
                [87, 158.60, 116.99],
                [88, 169.53, 125.64],
                [89, 180.54, 134.33],
                [90, 191.55, 143.03],
                [91, 202.48, 151.68],
                [92, 213.29, 160.18],
                [93, 228.23, 172.25],
                [94, 243.80, 184.70],
                [95, 259.76, 197.87],
                [96, 276.22, 211.70],
                [97, 293.15, 225.54],
                [98, 310.81, 239.56],
                [99, 329.53, 254.45]
            ]
        ];
        $this->disability_options = [
            'min_age' => -14,
            'max_age' => 65,
            'max_renewal' => 69,
            'min_coverage' => 2000,
            'guaranteed_acceptance' => 10000, //max cover if underwriting reject


            'child_lien' => [
                ['age' => 0, 'coverage_claimable_percent' => 20],
                ['age' => 1, 'coverage_claimable_percent' => 40],
                ['age' => 2, 'coverage_claimable_percent' => 60],
                ['age' => 3, 'coverage_claimable_percent' => 80],

            ],


            // student 1067, 1142
            // housewife 618, 1144
            // househusband 617, 1143
            // retiree 981, 1145
            // working = any other than above

            'max_coverage_by_age' => [
                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 150000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Student')], 'coverage' => 250000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 250000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 250000],
                ['from' => 16, 'to' => 65, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 350000]],
            ],

            'max_coverage_by_age_charity' => [

                ['from' => -14, 'to' => 15, 'occ' => null, 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Student')], 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Househusband'), $this->getData('Housewife')], 'coverage' => 100000],
                ['from' => 16, 'to' => 65, 'occ' => [$this->getData('Retiree, Pensioner')], 'coverage' => 50000],
                ['from' => 16, 'to' => 65, 'occ' => [-$this->getData('Student'), -$this->getData('Househusband'), -$this->getData('Housewife'), -$this->getData('Retiree, Pensioner')], 'coverage' => ['max' => 250000, 'min' => 100000]],
            ],


            'premium_rates' =>
                [#Age Male Female
                    [0, 0.06, 0.06],
                    [1, 0.06, 0.06],
                    [2, 0.06, 0.06],
                    [3, 0.06, 0.06],
                    [4, 0.06, 0.06],
                    [5, 0.06, 0.06],
                    [6, 0.06, 0.06],
                    [7, 0.06, 0.06],
                    [8, 0.06, 0.06],
                    [9, 0.06, 0.06],
                    [10, 0.08, 0.08],
                    [11, 0.10, 0.08],
                    [12, 0.10, 0.08],
                    [13, 0.11, 0.10],
                    [14, 0.13, 0.10],
                    [15, 0.15, 0.10],
                    [16, 0.15, 0.11],
                    [17, 0.15, 0.11],
                    [18, 0.15, 0.11],
                    [19, 0.15, 0.11],
                    [20, 0.15, 0.13],
                    [21, 0.15, 0.13],
                    [22, 0.15, 0.13],
                    [23, 0.15, 0.13],
                    [24, 0.15, 0.13],
                    [25, 0.15, 0.15],
                    [26, 0.15, 0.15],
                    [27, 0.15, 0.15],
                    [28, 0.15, 0.15],
                    [29, 0.15, 0.15],
                    [30, 0.16, 0.15],
                    [31, 0.16, 0.15],
                    [32, 0.18, 0.15],
                    [33, 0.18, 0.15],
                    [34, 0.19, 0.15],
                    [35, 0.21, 0.16],
                    [36, 0.23, 0.16],
                    [37, 0.24, 0.18],
                    [38, 0.26, 0.18],
                    [39, 0.27, 0.19],
                    [40, 0.31, 0.21],
                    [41, 0.34, 0.23],
                    [42, 0.37, 0.24],
                    [43, 0.42, 0.27],
                    [44, 0.49, 0.31],
                    [45, 0.55, 0.34],
                    [46, 0.61, 0.39],
                    [47, 0.70, 0.42],
                    [48, 0.78, 0.49],
                    [49, 0.87, 0.53],
                    [50, 0.97, 0.61],
                    [51, 1.08, 0.68],
                    [52, 1.20, 0.76],
                    [53, 1.34, 0.86],
                    [54, 1.49, 0.97],
                    [55, 1.65, 1.08],
                    [56, 1.84, 1.21],
                    [57, 2.04, 1.36],
                    [58, 2.26, 1.52],
                    [59, 2.49, 1.68],
                    [60, 2.77, 1.88],
                    [61, 3.06, 2.09],
                    [62, 3.36, 2.31],
                    [63, 3.70, 2.55],
                    [64, 4.09, 2.81],
                    [65, 4.50, 3.10],
                    [66, 4.95, 3.41],
                    [67, 5.43, 3.75],
                    [68, 5.97, 4.11],
                    [69, 6.53, 4.50]
                ]
        ];
        $this->accident_options = [
            'min_age' => 14,
            'max_age' => 65,
            'max_renewal' => 69,
            'min_coverage' => 2000,
//        'max_coverage' => [''], //5x the death coverage
            // 5x of death capped at 3M
            'guaranteed_acceptance' => 50000, //max cover if underwriting reject


            'child_lien' => [
                ['age' => 0, 'coverage_claimable_percent' => 20],
                ['age' => 1, 'coverage_claimable_percent' => 40],
                ['age' => 2, 'coverage_claimable_percent' => 60],
                ['age' => 3, 'coverage_claimable_percent' => 80],
            ],

            'premium_rates' => [
                #Age Male Female
                # eg. male 30 - 1.2725 x 200000
                [0, 0.13, 0.13],
                [1, 0.13, 0.13],
                [2, 0.13, 0.13],
                [3, 0.13, 0.13],
                [4, 0.13, 0.13],
                [5, 0.13, 0.13],
                [6, 0.13, 0.13],
                [7, 0.13, 0.13],
                [8, 0.13, 0.13],
                [9, 0.13, 0.13],
                [10, 0.16, 0.16],
                [11, 0.18, 0.18],
                [12, 0.19, 0.19],
                [13, 0.21, 0.21],
                [14, 0.23, 0.23],
                [15, 0.24, 0.24],
                [16, 0.29, 0.29],
                [17, 0.29, 0.29],
                [18, 0.29, 0.29],
                [19, 0.29, 0.29],
                [20, 0.29, 0.29],
                [21, 0.29, 0.29],
                [22, 0.31, 0.31],
                [23, 0.31, 0.31],
                [24, 0.32, 0.32],
                [25, 0.32, 0.32],
                [26, 0.32, 0.32],
                [27, 0.32, 0.32],
                [28, 0.32, 0.32],
                [29, 0.32, 0.32],
                [30, 0.36, 0.36],
                [31, 0.36, 0.36],
                [32, 0.36, 0.36],
                [33, 0.39, 0.39],
                [34, 0.40, 0.40],
                [35, 0.42, 0.42],
                [36, 0.44, 0.44],
                [37, 0.47, 0.47],
                [38, 0.49, 0.49],
                [39, 0.55, 0.55],
                [40, 0.65, 0.65],
                [41, 0.66, 0.66],
                [42, 0.70, 0.70],
                [43, 0.73, 0.73],
                [44, 0.74, 0.74],
                [45, 0.78, 0.78],
                [46, 0.79, 0.79],
                [47, 0.84, 0.84],
                [48, 0.89, 0.89],
                [49, 0.91, 0.91],
                [50, 0.94, 0.94],
                [51, 0.95, 0.95],
                [52, 0.99, 0.99],
                [53, 1.00, 1.00],
                [54, 1.03, 1.03],
                [55, 1.07, 1.07],
                [56, 1.08, 1.08],
                [57, 1.10, 1.10],
                [58, 1.13, 1.13],
                [59, 1.15, 1.15],
                [60, 1.29, 1.29],
                [61, 1.44, 1.44],
                [62, 1.58, 1.58],
                [63, 1.76, 1.76],
                [64, 1.91, 1.91],
                [65, 2.10, 2.10],
                [66, 2.34, 2.34],
                [67, 2.55, 2.55],
                [68, 2.81, 2.81],
                [69, 3.09, 3.09]
            ]


        ];
        $this->medical_options = [
            'max_age' => 55,
            'min_age' => 14,
            'max_coverage_by_age' => [
                ['from' => 0, 'to' => 15, 'coverage' => 500000],
                ['from' => 16, 'to' => 50, 'coverage' => 1000000],
                ['from' => 51, 'to' => 60, 'coverage' => 200000],
                ['from' => 61, 'to' => 70, 'coverage' => 100000],
            ],
            'child_lien' => [
                ['age' => 0, 'coverage_claimable_percent' => 20],
                ['age' => 1, 'coverage_claimable_percent' => 40],
                ['age' => 2, 'coverage_claimable_percent' => 60],
                ['age' => 3, 'coverage_claimable_percent' => 80],

            ],
            'plans' => [
                ['name' => 'plan1_500', 'deductible' => 500, 'premium_rates' => [
                    [0, 1610.23, 1148.61],
                    [1, 1451.66, 1074.74],
                    [2, 1284.85, 997.17],
                    [3, 1118.12, 919.65],
                    [4, 959.53, 845.77],
                    [5, 817.39, 779.26],
                    [6, 699.89, 723.83],
                    [7, 615.22, 683.11],
                    [8, 568.58, 659.31],
                    [9, 552.91, 648.70],
                    [10, 558.14, 645.97],
                    [11, 574.22, 645.83],
                    [12, 591.02, 643.05],
                    [13, 600.59, 633.88],
                    [14, 603.35, 620.62],
                    [15, 601.81, 607.16],
                    [16, 598.51, 597.32],
                    [17, 597.54, 596.63],
                    [18, 599.36, 606.12],
                    [19, 603.21, 622.94],
                    [20, 607.75, 642.85],
                    [21, 611.51, 661.65],
                    [22, 613.05, 674.98],
                    [23, 607.62, 676.15],
                    [24, 600.74, 671.02],
                    [25, 594.69, 663.20],
                    [26, 591.78, 656.36],
                    [27, 594.41, 654.02],
                    [28, 604.42, 659.07],
                    [29, 621.87, 671.06],
                    [30, 639.97, 681.79],
                    [31, 660.68, 692.98],
                    [32, 682.93, 702.88],
                    [33, 705.60, 710.23],
                    [34, 728.33, 715.58],
                    [35, 754.93, 723.84],
                    [36, 785.56, 735.97],
                    [37, 827.40, 759.36],
                    [38, 899.10, 810.92],
                    [39, 976.80, 868.05],
                    [40, 1057.64, 927.54],
                    [41, 1138.64, 986.09],
                    [42, 1216.80, 1040.43],
                    [43, 1290.18, 1088.64],
                    [44, 1360.63, 1133.66],
                    [45, 1431.23, 1179.83],
                    [46, 1504.73, 1231.44],
                    [47, 1584.16, 1292.77],
                    [48, 1672.04, 1366.97],
                    [49, 1769.69, 1452.40],
                    [50, 1878.13, 1546.27],
                    [51, 1998.37, 1645.86],
                    [52, 2131.40, 1748.30],
                    [53, 2278.17, 1851.29],
                    [54, 2439.49, 1953.73],
                    [55, 2616.17, 2055.08],
                    [56, 2809.00, 2154.67],
                    [57, 3018.76, 2251.91],
                    [58, 3245.54, 2346.41],
                    [59, 3486.47, 2438.51],
                    [60, 3738.05, 2528.84],
                    [61, 3996.72, 2617.96],
                    [62, 4258.93, 2706.51],
                    [63, 4537.71, 2883.68],
                    [64, 4815.48, 3060.20],
                    [65, 5104.51, 3243.83],
                    [66, 5405.31, 3435.00],
                    [67, 5718.45, 3634.01],
                    [68, 6022.79, 3827.41],
                    [69, 6351.66, 4036.40],
                    [70, 6692.56, 4253.05]
                ]],
                ['name' => 'plan2_1000', 'deductible' => 1000, 'premium_rates' => [
                    [0, 1527.65, 1089.70],
                    [1, 1377.21, 1019.62],
                    [2, 1218.97, 946.04],
                    [3, 1060.78, 872.49],
                    [4, 910.33, 802.40],
                    [5, 775.49, 739.30],
                    [6, 663.99, 686.71],
                    [7, 583.68, 648.08],
                    [8, 539.41, 625.49],
                    [9, 524.56, 615.43],
                    [10, 529.52, 612.84],
                    [11, 544.77, 612.72],
                    [12, 560.70, 610.08],
                    [13, 569.79, 601.37],
                    [14, 572.42, 588.81],
                    [15, 570.96, 576.02],
                    [16, 567.83, 566.69],
                    [17, 566.90, 566.04],
                    [18, 568.61, 575.03],
                    [19, 572.27, 590.99],
                    [20, 576.59, 609.89],
                    [21, 580.15, 627.71],
                    [22, 581.61, 640.36],
                    [23, 576.45, 641.47],
                    [24, 569.93, 636.61],
                    [25, 564.19, 629.20],
                    [26, 561.43, 622.70],
                    [27, 563.93, 620.48],
                    [28, 573.42, 625.27],
                    [29, 589.99, 636.65],
                    [30, 607.16, 646.83],
                    [31, 626.79, 657.44],
                    [32, 647.92, 666.83],
                    [33, 669.41, 673.81],
                    [34, 690.97, 678.88],
                    [35, 716.21, 686.72],
                    [36, 745.27, 698.22],
                    [37, 784.97, 720.42],
                    [38, 852.99, 769.33],
                    [39, 926.71, 823.54],
                    [40, 1003.40, 879.97],
                    [41, 1080.25, 935.51],
                    [42, 1154.41, 987.08],
                    [43, 1224.02, 1032.81],
                    [44, 1290.85, 1075.52],
                    [45, 1357.85, 1119.33],
                    [46, 1427.56, 1168.29],
                    [47, 1502.92, 1226.48],
                    [48, 1586.29, 1296.88],
                    [49, 1678.94, 1377.90],
                    [50, 1781.81, 1466.97],
                    [51, 1895.89, 1561.45],
                    [52, 2022.09, 1658.65],
                    [53, 2161.33, 1756.34],
                    [54, 2314.38, 1853.53],
                    [55, 2482.00, 1949.69],
                    [56, 2664.94, 2044.17],
                    [57, 2863.95, 2136.43],
                    [58, 3079.10, 2226.08],
                    [59, 3307.68, 2313.46],
                    [60, 3546.34, 2399.16],
                    [61, 3791.75, 2483.71],
                    [62, 4040.52, 2567.71],
                    [63, 4305.00, 2735.79],
                    [64, 4568.53, 2903.26],
                    [65, 4842.73, 3077.49],
                    [66, 5128.12, 3258.84],
                    [67, 5425.19, 3447.65],
                    [68, 5713.93, 3631.13],
                    [69, 6025.93, 3829.41],
                    [70, 6349.36, 4034.94]
                ]],
                ['name' => 'plan3_2000', 'deductible' => 2000, 'premium_rates' => [
                    [0, 1362.50, 971.90],
                    [1, 1228.32, 909.39],
                    [2, 1087.19, 843.75],
                    [3, 946.10, 778.17],
                    [4, 811.91, 715.65],
                    [5, 691.64, 659.38],
                    [6, 592.21, 612.47],
                    [7, 520.58, 578.02],
                    [8, 481.10, 557.88],
                    [9, 467.84, 548.90],
                    [10, 472.28, 546.59],
                    [11, 485.88, 546.48],
                    [12, 500.08, 544.12],
                    [13, 508.19, 536.36],
                    [14, 510.53, 525.14],
                    [15, 509.22, 513.75],
                    [16, 506.44, 505.42],
                    [17, 505.61, 504.84],
                    [18, 507.15, 512.87],
                    [19, 510.41, 527.10],
                    [20, 514.25, 543.95],
                    [21, 517.43, 559.85],
                    [22, 518.74, 571.13],
                    [23, 514.13, 572.13],
                    [24, 508.32, 567.79],
                    [25, 503.20, 561.17],
                    [26, 500.74, 555.38],
                    [27, 502.96, 553.41],
                    [28, 511.43, 557.67],
                    [29, 526.21, 567.81],
                    [30, 541.52, 576.90],
                    [31, 559.04, 586.37],
                    [32, 577.87, 594.74],
                    [33, 597.04, 600.96],
                    [34, 616.27, 605.50],
                    [35, 638.79, 612.48],
                    [36, 664.70, 622.74],
                    [37, 700.11, 642.54],
                    [38, 760.78, 686.16],
                    [39, 826.52, 734.50],
                    [40, 894.92, 784.84],
                    [41, 963.47, 834.39],
                    [42, 1029.60, 880.36],
                    [43, 1091.69, 921.15],
                    [44, 1151.30, 959.26],
                    [45, 1211.05, 998.32],
                    [46, 1273.24, 1041.98],
                    [47, 1340.44, 1093.89],
                    [48, 1414.80, 1156.67],
                    [49, 1497.43, 1228.95],
                    [50, 1589.18, 1308.39],
                    [51, 1690.93, 1392.65],
                    [52, 1803.48, 1479.33],
                    [53, 1927.68, 1566.47],
                    [54, 2064.18, 1653.15],
                    [55, 2213.67, 1738.91],
                    [56, 2376.85, 1823.18],
                    [57, 2554.33, 1905.47],
                    [58, 2746.23, 1985.43],
                    [59, 2950.09, 2063.35],
                    [60, 3162.96, 2139.79],
                    [61, 3381.84, 2215.20],
                    [62, 3603.71, 2290.12],
                    [63, 3839.59, 2440.04],
                    [64, 4074.64, 2589.40],
                    [65, 4319.20, 2744.79],
                    [66, 4573.72, 2906.54],
                    [67, 4838.68, 3074.94],
                    [68, 5096.21, 3238.58],
                    [69, 5374.48, 3415.42],
                    [70, 5662.94, 3598.73]
                ]],
                ['name' => 'plan4_5000', 'deductible' => 5000, 'premium_rates' => [
                    [0, 1089.99, 777.52],
                    [1, 982.66, 727.51],
                    [2, 869.75, 675.00],
                    [3, 756.89, 622.53],
                    [4, 649.52, 572.52],
                    [5, 553.32, 527.50],
                    [6, 473.78, 489.98],
                    [7, 416.46, 462.41],
                    [8, 384.88, 446.30],
                    [9, 374.28, 439.11],
                    [10, 377.82, 437.27],
                    [11, 388.70, 437.18],
                    [12, 400.07, 435.29],
                    [13, 406.55, 429.09],
                    [14, 408.43, 420.12],
                    [15, 407.39, 410.99],
                    [16, 405.15, 404.34],
                    [17, 404.49, 403.88],
                    [18, 405.72, 410.29],
                    [19, 408.32, 421.69],
                    [20, 411.40, 435.17],
                    [21, 413.95, 447.89],
                    [22, 414.99, 456.90],
                    [23, 411.31, 457.70],
                    [24, 406.65, 454.23],
                    [25, 402.56, 448.94],
                    [26, 400.59, 444.31],
                    [27, 402.38, 442.72],
                    [28, 409.14, 446.14],
                    [29, 420.96, 454.25],
                    [30, 433.21, 461.52],
                    [31, 447.23, 469.09],
                    [32, 462.29, 475.80],
                    [33, 477.63, 480.77],
                    [34, 493.02, 484.39],
                    [35, 511.03, 489.98],
                    [36, 531.76, 498.19],
                    [37, 560.09, 514.03],
                    [38, 608.63, 548.92],
                    [39, 661.22, 587.60],
                    [40, 715.94, 627.87],
                    [41, 770.78, 667.51],
                    [42, 823.68, 704.30],
                    [43, 873.35, 736.92],
                    [44, 921.05, 767.40],
                    [45, 968.83, 798.65],
                    [46, 1018.58, 833.59],
                    [47, 1072.35, 875.11],
                    [48, 1131.84, 925.33],
                    [49, 1197.95, 983.16],
                    [50, 1271.35, 1046.70],
                    [51, 1352.74, 1114.12],
                    [52, 1442.79, 1183.46],
                    [53, 1542.14, 1253.18],
                    [54, 1651.35, 1322.53],
                    [55, 1770.94, 1391.12],
                    [56, 1901.48, 1458.55],
                    [57, 2043.46, 1524.37],
                    [58, 2196.98, 1588.34],
                    [59, 2360.08, 1650.69],
                    [60, 2530.37, 1711.83],
                    [61, 2705.47, 1772.15],
                    [62, 2882.97, 1832.09],
                    [63, 3071.67, 1952.03],
                    [64, 3259.71, 2071.52],
                    [65, 3455.36, 2195.82],
                    [66, 3658.98, 2325.23],
                    [67, 3870.95, 2459.94],
                    [68, 4076.97, 2590.86],
                    [69, 4299.58, 2732.33],
                    [70, 4530.36, 2878.98]
                ]],
                ['name' => 'plan5_10000', 'deductible' => 10000, 'premium_rates' => [
                    [0, 660.60, 471.22],
                    [1, 595.55, 440.92],
                    [2, 527.13, 409.10],
                    [3, 458.71, 377.29],
                    [4, 393.66, 346.99],
                    [5, 335.34, 319.70],
                    [6, 287.14, 296.95],
                    [7, 252.40, 280.26],
                    [8, 233.26, 270.48],
                    [9, 226.84, 266.13],
                    [10, 228.98, 265.01],
                    [11, 235.57, 264.96],
                    [12, 242.46, 263.81],
                    [13, 246.40, 260.05],
                    [14, 247.53, 254.62],
                    [15, 246.90, 249.09],
                    [16, 245.54, 245.06],
                    [17, 245.15, 244.78],
                    [18, 245.88, 248.66],
                    [19, 247.46, 255.57],
                    [20, 249.33, 263.73],
                    [21, 250.88, 271.44],
                    [22, 251.51, 276.91],
                    [23, 249.28, 277.40],
                    [24, 246.46, 275.30],
                    [25, 243.98, 272.09],
                    [26, 242.78, 269.27],
                    [27, 243.86, 268.31],
                    [28, 247.96, 270.39],
                    [29, 255.13, 275.31],
                    [30, 262.55, 279.72],
                    [31, 271.05, 284.29],
                    [32, 280.18, 288.36],
                    [33, 289.48, 291.37],
                    [34, 298.80, 293.57],
                    [35, 309.72, 296.96],
                    [36, 322.28, 301.93],
                    [37, 339.45, 311.54],
                    [38, 368.86, 332.69],
                    [39, 400.75, 356.13],
                    [40, 433.91, 380.53],
                    [41, 467.13, 404.55],
                    [42, 499.20, 426.84],
                    [43, 529.30, 446.63],
                    [44, 558.21, 465.09],
                    [45, 587.17, 484.04],
                    [46, 617.32, 505.20],
                    [47, 649.92, 530.38],
                    [48, 685.96, 560.81],
                    [49, 726.03, 595.86],
                    [50, 770.51, 634.37],
                    [51, 819.84, 675.23],
                    [52, 874.42, 717.25],
                    [53, 934.63, 759.50],
                    [54, 1000.81, 801.53],
                    [55, 1073.30, 843.11],
                    [56, 1152.41, 883.96],
                    [57, 1238.46, 923.86],
                    [58, 1331.51, 962.62],
                    [59, 1430.35, 1000.42],
                    [60, 1533.55, 1037.47],
                    [61, 1639.68, 1074.04],
                    [62, 1747.25, 1110.36],
                    [63, 1861.62, 1183.04],
                    [64, 1975.58, 1255.47],
                    [65, 2094.16, 1330.80],
                    [66, 2217.57, 1409.22],
                    [67, 2346.03, 1490.87],
                    [68, 2470.88, 1570.21],
                    [69, 2605.80, 1655.96],
                    [70, 2745.67, 1744.84]
                ]]
            ],
        ];
    }

    public function getData($name)
    {
        return IndustryJob::whereName($name)->first()->id;
    }
}
